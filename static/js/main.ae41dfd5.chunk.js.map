{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","roboset","name","title","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","naam","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,mBAAqDL,EAAMM,QAA3D,mBACvB,mCAAMN,EAAMI,QAAQG,KAApB,OACA,mCAAMP,EAAMI,QAAQI,MAApB,OACA,kCAAKR,EAAMI,QAAQK,MAAnB,WCHKC,EAAW,SAAAV,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,EAASE,QAASN,EAAMM,SAA7CF,EAAQC,UCNdQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOd,UAAU,SAASe,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCyCjEG,E,kDAxCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXC,YAAa,GACbd,QAAS,EACTe,KAAM,SACNV,SAAU,IAPD,E,qDAYb,WAAoB,IAAD,OACjBW,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,oBAG1C,WAAS,IAAD,SAC0BE,KAAKT,MAA9BR,EADD,EACCA,SAAUS,EADX,EACWA,YACXS,EAAmBlB,EAASmB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQG,KAAKwB,cAAcC,SAASZ,EAAYW,kBACpD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAa,YAAc,kBACdC,aAAc,SAAAkB,GAAC,OAAI,EAAKN,SAAS,CAACP,YAAaa,EAAEC,OAAOC,WAExD,cAAC,EAAD,CAAUxB,SAAYkB,EAAkBvB,QAAWsB,KAAKT,MAAMb,UAE5D,6BAAKsB,KAAKT,MAAME,OAEhB,wBAAQe,QAAS,kBAAM,EAAKT,SAAS,CAACN,KAAM,WAA5C,0BACA,wBAAQe,QAAS,kBAAM,EAAKT,SAAS,CAACN,KAAM,YAA5C,0BACA,wBAAQe,QAAS,kBAAM,EAAKT,SAAS,CAACrB,QAAS,EAAKa,MAAMb,QAAQ,KAAlE,qC,GAnCU+B,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae41dfd5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monsters' src={`https://robohash.org/${props.monster.id}?set=set${props.roboset}&size=180x180`} />\r\n        <h2> {props.monster.name} </h2>\r\n        <h2> {props.monster.title} </h2>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './card-list.styles.css';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const Cardlist = props => {\r\n\r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster} roboset={props.roboset}/>\r\n      ))}      \r\n        </div>\r\n};","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>(\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange} />\r\n\r\n    );","import './App.css';\nimport React, {Component} from 'react';\nimport {Cardlist} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      searchField: '',\n      roboset: 1,\n      naam: 'Mariel',\n      monsters: []\n\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n      placeholder = 'Search Monsters'\n      handleChange={e => this.setState({searchField: e.target.value})}\n      />\n      <Cardlist monsters = {filteredMonsters} roboset = {this.state.roboset}/>\n      \n        <h1>{this.state.naam}</h1>\n\n        <button onClick={() => this.setState({naam: 'Marco'})}> Change Name</button>\n        <button onClick={() => this.setState({naam: 'Mariel'})}> Change Back</button>\n        <button onClick={() => this.setState({roboset: this.state.roboset+1})}> Change Monsters</button>\n    </div>\n  );\n};\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}